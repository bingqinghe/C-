1. 字段与方法都要放到类中，不能独立于类之外。
* 对
  错

2. 字段相当于变量，方法相当于函数。  
* 对
  错

3. this指当前对象，后面用->符号来访问其成员。  
  对
* 错

4. 构造方法返回类型是void  
* 对
  错

5. C#中，用冒号来表示继承  
* 对
  错

6. 访问父类的成员，使用关键词father  
  对
* 错

7. C#所有的类都是object的子类  
* 对
  错

8. 所有的对象都有ToString()方法  
* 对
  错

9. object等价于System.Object  
* 对
  错

10. 要重写父类的方法，使用关键词override。  
* 对
  错

11. as类似于强制类型转换但不抛出异常  
* 对
  错

12. 判断一个对象是不是某个类的实例，使用运算符is  
* 对
  错

13. 如果要一个Person对象，来一个Student对象是完全可以的。  
* 对
  错

14. 如果要一个Student对象，来一个Person对象是完全可以的。  
  对
* 错

15. internal是基于程序集的访问控制  
* 对
  错

16. protected是与继承相关的  
* 对
  错

17. static变量，即可以用类名来访问，又可以用对象实例来访问  
  对
* 错

18. static本质上与this是对立的  
* 对
  错

19. static方法中可以用this来访问其成员  
  对
* 错

20. C#变量不能将全局变量写在类之外，但可以用static变量表示全局变量。  
* 对
  错

21. readonly就是const  
  对
* 错

22. const只能用于基本类型及string  
* 对
  错

23. sealed表示不能被继承  
* 对
  错

24. abstract表示抽象的，不能被实例化  
* 对
  错

25. abstract表示抽象的，不能被实例化，也就是说不能有构造方法  
* 对
  错

26. abstract类一般都是用来被继承的  
* 对
  错

27. interface表示接口  
* 对
  错

28. interface中的方法自动就是public的，而且是abstract的  
* 对
  错

29. interface一般用于表示某种特征  
* 对
  错

30. 一个类只能实现一个接口  
  对
* 错

31. interface的名字习惯用字母I开始  
* 对
  错

32. 实现interface的方法前一定要用public修饰  
  对
* 错

33. enum本质是上符号化的整数  
* 对
  错

34. enum量可以用于switch语句  
* 对
  错

35. 面向对象的程序的主体是定义各种类  
* 对
  错
